services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  auth-service:
    depends_on:
      - kafka
      - redis
      - postgres
    image: partyfinder/auth:latest
    container_name: auth
    ports:
      - "8721:8721"

  organizer-profile-service:
    depends_on:
      - kafka
      - redis
      - postgres
    image: partyfinder/organizer-profile:latest
    container_name: organizer-profile
    ports:
      - "8722:8722"

  organizer-channel-service:
      depends_on:
       - kafka
       - redis
       - postgres
      image: partyfinder/organizer-channel:latest
      container_name: organizer-channel
      ports:
       - "8123:8123"

  # client-profile-service:
  #     depends_on:
  #       - kafka
  #       - redis
  #       - postgres
  #     image: partyfinder/client-profile:latest
  #     container_name: client-profile
  #     ports:
  #       - "8724:8724"

  # event-service:
  #     depends_on:
  #       - kafka
  #       - redis
  #       - postgres
  #     image: partyfinder/event:latest
  #     container_name: event
  #     ports:
  #       - "8723:8723"

  # rating-system-service:
  #     depends_on:
  #       - kafka
  #       - redis
  #       - postgres
  #     image: partyfinder/rating-system:latest
  #     container_name: rating-system
  #     ports:
  #       - "8725:8725"

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    depends_on:
      - kafka
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      JVM_OPTS: "-Xms32M -Xmx64M"

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    command: [ "redis-server", "--save", "60", "1", "--loglevel", "warning" ]

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: artem
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: diploma
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
  pgadmin_data:
